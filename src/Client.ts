/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "./core";
import { Ignition } from "./api/resources/ignition/client/Client";
import { Tokens } from "./api/resources/tokens/client/Client";
import { Accounts } from "./api/resources/accounts/client/Client";
import { Policies } from "./api/resources/policies/client/Client";
import { Carriers } from "./api/resources/carriers/client/Client";

export declare namespace AxleApiClient {
    interface Options {
        environment: string;
        apiKey?: core.Supplier<string>;
        clientId: string;
        clientSecret: string;
    }
}

export class AxleApiClient {
    constructor(private readonly options: AxleApiClient.Options) {}

    private _ignition: Ignition | undefined;

    public get ignition(): Ignition {
        return (this._ignition ??= new Ignition(this.options));
    }

    private _tokens: Tokens | undefined;

    public get tokens(): Tokens {
        return (this._tokens ??= new Tokens(this.options));
    }

    private _accounts: Accounts | undefined;

    public get accounts(): Accounts {
        return (this._accounts ??= new Accounts(this.options));
    }

    private _policies: Policies | undefined;

    public get policies(): Policies {
        return (this._policies ??= new Policies(this.options));
    }

    private _carriers: Carriers | undefined;

    public get carriers(): Carriers {
        return (this._carriers ??= new Carriers(this.options));
    }
}
