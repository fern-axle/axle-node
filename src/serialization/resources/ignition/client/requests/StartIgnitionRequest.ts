/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Axle from "../../../../../api";
import * as core from "../../../../../core";

export const StartIgnitionRequest: core.serialization.Schema<
    serializers.StartIgnitionRequest.Raw,
    Axle.StartIgnitionRequest
> = core.serialization.object({
    redirectUri: core.serialization.string().optional(),
    webhookUri: core.serialization.string().optional(),
    user: core.serialization.lazyObject(async () => (await import("../../../..")).User).optional(),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
});

export declare namespace StartIgnitionRequest {
    interface Raw {
        redirectUri?: string | null;
        webhookUri?: string | null;
        user?: serializers.User.Raw | null;
        metadata?: Record<string, unknown> | null;
    }
}
